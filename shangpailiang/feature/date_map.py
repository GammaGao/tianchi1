# coding: utf-8
import pandas as pd
import numpy as np
import time
import datetime
import re

holidays = [
    '2013-01-01', '2013-01-02', '2013-01-03',
    '2013-02-09', '2013-02-10', '2013-02-11', '2013-02-12', '2013-02-13', '2013-02-14', '2013-02-15',
    '2013-04-04', '2013-04-05', '2013-04-06',
    '2013-04-29', '2013-04-30', '2013-05-01',
    '2013-06-10', '2013-06-11', '2013-06-12',
    '2013-09-19', '2013-09-20', '2013-09-21',
    '2013-10-01', '2013-10-02', '2013-10-03', '2013-10-04', '2013-10-05', '2013-10-06', '2013-10-07',
    '2014-01-01',
    '2014-01-31', '2014-02-01', '2014-02-02', '2014-02-03', '2014-02-04', '2014-02-05', '2014-02-06',
    '2014-04-05', '2014-04-06', '2014-04-07',
    '2014-05-01', '2014-05-02', '2014-05-03',
    '2014-05-31', '2014-06-01', '2014-06-02',
    '2014-09-06', '2014-09-07', '2014-09-08',
    '2014-10-01', '2014-10-02', '2014-10-03', '2014-10-04', '2014-10-05', '2014-10-06', '2014-10-07',
    '2015-01-01', '2015-01-02', '2015-01-03',
    '2015-02-18', '2015-02-19', '2015-02-20', '2015-02-21', '2015-02-22', '2015-02-23', '2015-02-24',
    '2015-04-05', '2015-04-06',
    '2015-05-01', '2015-05-02', '2015-05-03',
    '2015-06-20', '2015-06-21', '2015-06-22',
    '2015-09-27',
    '2015-10-01', '2015-10-02', '2015-10-03', '2015-10-04', '2015-10-05', '2015-10-06', '2015-10-07',
    '2016-01-01',
    '2016-02-07', '2016-02-08', '2016-02-09', '2016-02-10', '2016-02-11', '2016-02-12', '2016-02-13',
    '2016-04-02', '2016-04-03', '2016-04-04',
    '2016-05-01', '2016-05-02',
    '2016-06-09', '2016-06-10', '2016-06-11',
    '2016-09-15', '2016-09-16', '2016-09-17',
    '2016-10-01', '2016-10-02', '2016-10-03', '2016-10-04', '2016-10-05', '2016-10-06', '2016-10-07',
    '2017-01-01', '2017-01-02',
    '2017-01-27', '2017-01-28', '2017-01-29', '2017-01-30', '2017-01-31', '2017-02-01', '2017-02-02',
    '2017-04-02', '2017-04-03', '2017-04-04',
    '2017-05-01',
    '2017-05-28', '2017-05-29', '2017-05-30',
    '2017-10-01', '2017-10-02', '2017-10-03', '2017-10-04', '2017-10-05', '2017-10-06', '2017-10-07', '2017-10-08',
    '2018-01-01',
]
workdays = [
    '2013-01-05', '2013-01-06',
    '2013-02-16', '2013-02-17',
    '2013-04-07',
    '2013-04-27', '2013-04-28',
    '2013-06-08', '2013-06-09',
    '2013-09-22',
    '2013-09-29',
    '2013-10-12',
    '2014-01-26', '2014-02-08',
    '2014-05-04',
    '2014-09-28', '2014-10-11',
    '2015-01-04',
    '2015-02-15', '2015-02-28',
    '2015-10-10',
    '2016-02-06', '2016-02-14',
    '2016-06-12',
    '2016-09-18',
    '2016-10-08', '2016-10-09',
    '2017-01-22', '2017-02-04',
    '2017-04-01',
    '2017-05-27',
    '2017-09-30',
]
type4_dates = [
    '2013-01-04',
    '2014-01-06',
    '2014-01-07',
    '2015-01-04',
    '2015-01-05',
    '2015-01-06',
    '2015-01-07',
    '2015-01-08',
    '2016-01-04',
    '2016-01-05',
    '2016-01-06',
    '2017-01-03',
    '2017-01-04',
    '2017-01-05',
    '2017-01-06',
    '2018-01-02',
    '2018-01-03',
    '2018-01-04',
]
# In[130]:
'''
0 国家规定周末上班日           1.5-1.6   2000-4000         6-7 workingday
1 国家规定假期加班日           1.2-1.3     20+             x   holiday with cnt
2 正常工作日                   星期1-5   1500-3000         1-5 workingday
3 正常周末加班日               星期6-7    200+             6-7 ???
4 国家规定的第一个上班日       5000+
5 国家规定假期放假日           1.1          0              x   holiday without cnt
'''
date_list = []
begin_date = datetime.datetime.strptime('2013-01-01', "%Y-%m-%d")
end_date = datetime.datetime.strptime('2017-11-29', "%Y-%m-%d")
while begin_date <= end_date:
    dayofweek = begin_date.timetuple().tm_wday + 1
    dayofyear = begin_date.timetuple().tm_yday
    weekofyear = int(begin_date.strftime("%W")) + 1
    date_str = begin_date.strftime("%Y-%m-%d")
    if date_str in type4_dates:  # 国家规定的第一个上班日
        date_type = 4
    elif date_str in workdays:  # 国家规定周末上班日
        date_type = 0
    elif date_str in holidays:  # 国家规定假期加班日
        date_type = 1
    elif dayofweek == 6 or dayofweek == 7:  # 正常周末加班日
        date_type = 3
    else:
        date_type = 2  # 正常工作日
    date_list.append([date_str, dayofyear, weekofyear, dayofweek, date_type])
    begin_date += datetime.timedelta(days=1)

t = pd.read_csv('rawdata/fusai_train_20180227.txt', sep='\t')
a = pd.read_csv('rawdata/fusai_test_A_20180227.txt', sep='\t')
b = pd.read_csv('rawdata/fusai_test_B_20180227.txt', sep='\t')
# train 1 -  1107
# testa 1107 - 1249
# teatb 1250 - 1640

t1 = t.groupby(['date', 'day_of_week'], as_index=False).sum()
a1 = a.groupby(['date', 'day_of_week'], as_index=False).sum()
b1 = b.groupby(['date', 'day_of_week'], as_index=False).sum()
w1 = ''
for i in t1['day_of_week']:
    w1 += '%d' % i

wa = ''
for i in a1['day_of_week']:
    wa += '%d' % i

wb = ''
for i in b1['day_of_week']:
    wb += '%d' % i

wtotal = w1 + wa[1:] + wb
'''
s = 0
for i in range(len(wtotal)):
    if wtotal[i] == '7':
        print(wtotal[s:i+1])
        s = i+1
'''
wtotalfill = '234567123456712345671234567123456712345fgabc45671234567123456g12345671234567123456712345671234567123456g1234567123456712345671234567123456g1234567123456g123456712c4567123456712345671234567123456g123456g1234567123456g123456g1234567123456g1234567123456g123456g1234e671234567123d5f7a23456712345671234567123456g1234567123456g123456712345671234567123456g1234567123456g1234567123456g123456712345671234e6gab345671234567123456g1234567123456g123456g123456712345671234567123456g123456712345671234567123456g1234567123456g1234567a23456g123456g123456g123456g1234567123456g123456g123456g123456g123456g123456g123456g123456g1234567a23456g123456g1234567123d56g1b34567123456g123456g123456g123456712345671234567123456g12345671234567123456g123456g1234567123456g1234567123456712345671234567123456712cdefga234567123456g1234567123456g123456g123456ga234567123456g123456g1234567123456g12345671234567123456g1234567123456g12345671234567123456g1234567123456g123456g123456g123456g123456g1234567123456712345f7123456g123456g123456g1234efg1b3456g12345671234567123456g1234567123456g1234567123456g123456g123456g1234567123456712345671234567123456g12345671234567123456gab3def7123456g123456g123456g123456g123456g1234567123456g123456g12345671234567123456ga234567123456g123456g123456g123456g12345f7123456712345671234567123456g123456g123456g123456g123456g123456g123456712345671234567123456g1234e67123456g12345fga2345671234567123456g1234567123456g12345671234567123456g123456g1234567123456712345671234567123456g123456712345671234efgabc45671234567123456712345671234567123456g1234567123456g12345671b34567123456g123456712345671234567123456g12345671234567123456g1234567123456712345671234567123456712345671234567123456712345671234567123456g123456712345f712345671234567123456g123456ga234567123456712345671234567123456712345671234567123456712'

order = ''
j = 0
for i in range(len(wtotalfill)):
    if wtotalfill[i] in ['a', 'b', 'c', 'd', 'e', 'f', 'g']:
        order += ',0'
    else:
        j = j + 1
        order += ',%d' % j

days = order[1:].split(',')

i = 0
order_date = []
for d in days:
    if d != '0':
        order_date.append([int(d), date_list[i][0]])
    i = i + 1

f = pd.DataFrame(order_date, columns=['date', 'date_map'])
f.to_csv('id_date.csv', index=False)

ds = pd.DataFrame(date_list, columns=['date_map', 'day_of_year', 'week_of_year', 'day_of_week', 'date_type'])

o1 = pd.read_csv('id_date.csv')

meg = o1.merge(ds, on=['date_map'])
meg.to_csv('datesmap.csv', index=False)

t = pd.read_csv('rawdata/fusai_train_20180227.txt', sep='\t')
t1 = pd.read_csv('rawdata/fusai_answer_a_20180307.txt', sep='\t')
a = pd.read_csv('rawdata/fusai_test_A_20180227.txt', sep='\t')
b = pd.read_csv('rawdata/fusai_test_B_20180227.txt', sep='\t')
meg1 = t.merge(meg, on=['date'])
meg1 = meg1[['date', 'brand', 'date_type', 'day_of_week_x', 'cnt', 'date_map', 'day_of_year', 'week_of_year', ]]
meg1.to_csv('train.csv', index=False,
            header=['date', 'brand', 'date_type', 'day_of_week', 'cnt', 'date_map', 'day_of_year', 'week_of_year'])

meg1 = t1.merge(meg, on=['date'])
meg1 = meg1[['date', 'brand', 'date_type', 'day_of_week', 'cnt', 'date_map', 'day_of_year', 'week_of_year', ]]
meg1.to_csv('traina.csv', index=False,
            header=['date', 'brand', 'date_type', 'day_of_week', 'cnt', 'date_map', 'day_of_year', 'week_of_year'])

meg1 = a.merge(meg, on=['date'])
meg1 = meg1[['date', 'brand', 'date_type', 'day_of_week_x', 'date_map', 'day_of_year', 'week_of_year', ]]
meg1.to_csv('testa.csv', index=False,
            header=['date', 'brand', 'date_type', 'day_of_week', 'date_map', 'day_of_year', 'week_of_year'])

meg1 = b.merge(meg, on=['date'])
meg1 = meg1[['date', 'brand', 'date_type', 'day_of_week_x', 'date_map', 'day_of_year', 'week_of_year', ]]
meg1.to_csv('testb.csv', index=False,
            header=['date', 'brand', 'date_type', 'day_of_week', 'date_map', 'day_of_year', 'week_of_year'])
